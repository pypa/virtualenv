[tox]
envlist =
    fix
    py311
    py310
    py39
    py38
    py37
    pypy3
    coverage
    readme
    docs
isolated_build = true
skip_missing_interpreters = true
requires = tox>=4

[testenv]
description = run tests with {basepython}
extras =
    test
commands =
    coverage erase
    coverage run -m pytest {posargs:--junitxml {toxworkdir}/junit.{envname}.xml tests --int}
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.{envname}.xml
    coverage html -d {envtmpdir}/htmlcov --show-contexts  --title virtualenv-{envname}-coverage
package = wheel
pass_env =
    CI_RUN
    PYTEST_*
    TERM
set_env =
    _COVERAGE_SRC = {envsitepackagesdir}/virtualenv
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml
wheel_build_env = .pkg

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
skip_install = true
deps =
    pre-commit>=3.0.4
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:readme]
description = check that the long description is valid (need for PyPI)
skip_install = true
deps =
    build>=0.10
    twine>=4.0.2
extras =
commands =
    python -m build -o {envtmpdir} --wheel --sdist .
    twine check {envtmpdir}/*

[testenv:docs]
description = build documentation
extras =
    docs
commands =
    sphinx-build -d "{envtmpdir}/doctree" docs "{toxworkdir}/docs_out" --color -b html {posargs:-W}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:upgrade]
description = upgrade pip/wheels/setuptools to latest
skip_install = true
deps =
    black>=23.1
commands =
    python upgrade_wheels.py
change_dir = {toxinidir}/tasks
pass_env =
    UPGRADE_ADVISORY

[testenv:release]
description = do a release, required posarg of the version number
deps =
    gitpython>=3.1.30
    packaging>=23
    towncrier>=22.12
commands =
    python release.py --version {posargs}
change_dir = {toxinidir}/tasks

[testenv:dev]
description = generate a DEV environment
extras =
    docs
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'
package = editable

[testenv:zipapp]
description = generate a zipapp
skip_install = true
deps =
    packaging>=23
commands =
    python tasks/make_zipapp.py
