[metadata]
name = virtualenv
version = attr: virtualenv.__version__
description = Virtual Python Environment builder
long_description = file: README.rst
keywords = virtual, environments, isolated
maintainer = Bernat Gabor
author = Bernat Gabor
maintainer-email = gaborjbernat@gmail.com
author-email = gaborjbernat@gmail.com
url = https://virtualenv.pypa.io/
project_urls =
    Source=https://github.com/pypa/virtualenv
    Tracker=https://github.com/pypa/virtualenv/issues
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Operating System :: Microsoft :: Windows
    Operating System :: MacOS :: MacOS X
    Topic :: Software Development :: Testing
    Topic :: Software Development :: Libraries
    Topic :: Utilities
platforms = any
license = MIT
license_file = LICENSE.txt

[options]
packages = find:
package_dir =
    =src
zip_safe = True
python_requires = >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*
install_requires =
    six >= 1.12.0, < 2
    pathlib2 >= 2.3.3, < 3
    appdirs >= 1.4.3
    entrypoints >= 0.3, <1
    distlib >= 0.3.0, <1; sys.platform == 'win32'
[options.packages.find]
where = src

[options.extras_require]
testing =
    pytest >= 4.0.0, <6
    coverage >= 4.5.0, < 5
    pytest-mock >= 1.12.1, <2
    xonsh >= 0.9.13, <1; python_version > '3.4'
docs =
    sphinx >= 2.0.0, < 3
    towncrier >= 18.5.0
    sphinx_rtd_theme >= 0.4.2, < 1

[options.package_data]
virtualenv.seed.embed.wheels = *.whl
virtualenv.activation.bash = *.sh
virtualenv.activation.cshell = *.csh
virtualenv.activation.batch = *.bat
virtualenv.activation.fish = *.fish
virtualenv.activation.powershell = *.ps1
virtualenv.activation.xonosh = *.xsh

[options.entry_points]
console_scripts =
    virtualenv=virtualenv.__main__:run
virtualenv.discovery =
    builtin = virtualenv.interpreters.discovery.builtin:Builtin
virtualenv.create =
    cpython3-posix = virtualenv.interpreters.create.cpython.cpython3:CPython3Posix
    cpython3-win = virtualenv.interpreters.create.cpython.cpython3:CPython3Windows
    cpython2-posix = virtualenv.interpreters.create.cpython.cpython2:CPython2Posix
    cpython2-win = virtualenv.interpreters.create.cpython.cpython2:CPython2Windows
    venv = virtualenv.interpreters.create.venv:Venv
virtualenv.seed =
    none = virtualenv.seed.none:NoneSeeder
    pip = virtualenv.seed.embed.pip_invoke:PipInvoke
    link-app-data = virtualenv.seed.embed.link_app_data:LinkFromAppData
virtualenv.activate =
    bash = virtualenv.activation.bash:BashActivator
    cshell = virtualenv.activation.cshell:CShellActivator
    batch = virtualenv.activation.batch:BatchActivator
    fish = virtualenv.activation.fish:FishActivator
    power-shell = virtualenv.activation.powershell:PowerShellActivator
    python = virtualenv.activation.python:PythonActivator
    xonosh = virtualenv.activation.xonosh:XonoshActivator
[sdist]
formats = gztar

[bdist_wheel]
universal = true

[tool:pytest]
markers =
    bash
    csh
    fish
    pwsh
    xonsh
junit_family = xunit2
